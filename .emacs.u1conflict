;;(setq inferior-lisp-program "/media/DATA/actr6/bin/lisp")
(setq inferior-lisp-program "/usr/bin/sbcl")
(setq slime-backend "/media/DATA/actr6/slime/swank-loader.lisp")
(add-to-list 'load-path "/media/DATA/actr6/slime/")
;;(require 'slime)
(load-file "/media/DATA/actr6/slime/slime.el")
;;(slime-setup)
(slime-setup '(slime-fancy))
;;(setq compilation-scroll-output 'first-error)
(setq compilation-scroll-output t)
;;(setq backup-directory-alist (quote ((".*" . "~/.emacs_backups/"))))
(setq backup-directory-alist `((".*" . ,"/home/ash022/.emacs_backups")))
    (setq auto-save-file-name-transforms
          `((".*" ,"/home/ash022/.emacs_backups" t)))
(defun my-kill-emacs ()
  "save some buffers, then exit unconditionally"
  (interactive)
  (save-some-buffers nil t)
  (kill-emacs))
(global-set-key (kbd "C-x C-c") 'my-kill-emacs)
(require 'sepia)
